services:
  frontend:
    image: nginx:1.25-alpine
    container_name: frontend
    ports:
      - "8080:80"
    volumes:
      - ./frontend/index.html:/usr/share/nginx/html/index.html
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - EmailNetwork
    depends_on:
      - gerenciamento

  db_gerenciamento:
    image: postgres:16
    container_name: db_gerenciamento
    restart: always
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - EmailNetwork

  gerenciamento:
    build:
      context: .
      dockerfile: gerenciamento/Dockerfile
    container_name: gerenciamento
    restart: always
    ports:
      - "5000:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Host=${DATABASE_HOST};Port=${DATABASE_PORT};Database=${DATABASE_NAME};Username=${DATABASE_USER};Password=${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD", "./HealthCheckClient", "http://localhost:8080/healthz"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      db_gerenciamento:
        condition: service_healthy
    networks:
      - EmailNetwork
  
  envio:
    build:
      context: .
      dockerfile: envio/Dockerfile
    container_name: envio
    restart: always
    environment:
      - ConnectionStrings__DefaultConnection=Host=${DATABASE_HOST};Port=${DATABASE_PORT};Database=${DATABASE_NAME};Username=${DATABASE_USER};Password=${DATABASE_PASSWORD}
      - SmtpSettings__Host=${SmtpSettings__Host}
      - SmtpSettings__Port=${SmtpSettings__Port}
      - SmtpSettings__Username=${SmtpSettings__Username}
      - SmtpSettings__Password=${SmtpSettings__Password}
      - SmtpSettings__SenderEmail=${SmtpSettings__SenderEmail}
      - SmtpSettings__SenderName=${SmtpSettings__SenderName}
    networks:
      - EmailNetwork
    depends_on:
      gerenciamento:
        condition: service_healthy

networks:
  EmailNetwork:
    driver: bridge

volumes:
  pgdata: